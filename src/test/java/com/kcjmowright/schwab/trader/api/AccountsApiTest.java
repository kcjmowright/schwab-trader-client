/*
 * Trader API - Account Access and User Preferences
 * Schwab Trader API access to Account, Order entry and User Preferences
 *
 * OpenAPI spec version: 1.0.0
 * Contact: TraderAPI@Schwab.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.kcjmowright.schwab.trader.api;

import com.kcjmowright.schwab.trader.model.Account;
import com.kcjmowright.schwab.trader.model.AccountNumberHash;
import com.kcjmowright.schwab.trader.model.ServiceError;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountsApi
 */
@Ignore
public class AccountsApiTest {

    private final AccountsApi api = new AccountsApi();

    /**
     * Get a specific account balance and positions for the logged in user.
     *
     * Specific account information with balances and positions. The balance information on these accounts is displayed by default but Positions will be returned based on the \&quot;positions\&quot; flag.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAccountTest() {
        String accountNumber = null;
        String fields = null;
        Account response = api.getAccount(accountNumber, fields);

        // TODO: test validations
    }
    /**
     * Get list of account numbers and their encrypted values
     *
     * Account numbers in plain text cannot be used outside of headers or request/response bodies. As the first step consumers must invoke this service to retrieve the list of plain text/encrypted value pairs, and use encrypted account values for all subsequent calls for any accountNumber request.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAccountNumbersTest() {
        List<AccountNumberHash> response = api.getAccountNumbers();

        // TODO: test validations
    }
    /**
     * Get linked account(s) balances and positions for the logged in user.
     *
     * All the linked account information for the user logged in. The balances on these accounts are displayed by default however the positions on these accounts will be displayed based on the \&quot;positions\&quot; flag.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAccountsTest() {
        String fields = null;
        List<Account> response = api.getAccounts(fields);

        // TODO: test validations
    }
}
