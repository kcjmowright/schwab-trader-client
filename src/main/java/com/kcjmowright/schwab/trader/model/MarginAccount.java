/*
 * Trader API - Account Access and User Preferences
 * Schwab Trader API access to Account, Order entry and User Preferences
 *
 * OpenAPI spec version: 1.0.0
 * Contact: TraderAPI@Schwab.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.kcjmowright.schwab.trader.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.kcjmowright.schwab.trader.model.MarginBalance;
import com.kcjmowright.schwab.trader.model.MarginInitialBalance;
import com.kcjmowright.schwab.trader.model.Position;
import com.kcjmowright.schwab.trader.model.SecuritiesAccountBase;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.List;
/**
 * MarginAccount
 */



public class MarginAccount extends SecuritiesAccountBase implements SecuritiesAccount {
  @JsonProperty("initialBalances")
  private MarginInitialBalance initialBalances = null;

  @JsonProperty("currentBalances")
  private MarginBalance currentBalances = null;

  @JsonProperty("projectedBalances")
  private MarginBalance projectedBalances = null;

  public MarginAccount initialBalances(MarginInitialBalance initialBalances) {
    this.initialBalances = initialBalances;
    return this;
  }

   /**
   * Get initialBalances
   * @return initialBalances
  **/
  @Schema(description = "")
  public MarginInitialBalance getInitialBalances() {
    return initialBalances;
  }

  public void setInitialBalances(MarginInitialBalance initialBalances) {
    this.initialBalances = initialBalances;
  }

  public MarginAccount currentBalances(MarginBalance currentBalances) {
    this.currentBalances = currentBalances;
    return this;
  }

   /**
   * Get currentBalances
   * @return currentBalances
  **/
  @Schema(description = "")
  public MarginBalance getCurrentBalances() {
    return currentBalances;
  }

  public void setCurrentBalances(MarginBalance currentBalances) {
    this.currentBalances = currentBalances;
  }

  public MarginAccount projectedBalances(MarginBalance projectedBalances) {
    this.projectedBalances = projectedBalances;
    return this;
  }

   /**
   * Get projectedBalances
   * @return projectedBalances
  **/
  @Schema(description = "")
  public MarginBalance getProjectedBalances() {
    return projectedBalances;
  }

  public void setProjectedBalances(MarginBalance projectedBalances) {
    this.projectedBalances = projectedBalances;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MarginAccount marginAccount = (MarginAccount) o;
    return Objects.equals(this.initialBalances, marginAccount.initialBalances) &&
        Objects.equals(this.currentBalances, marginAccount.currentBalances) &&
        Objects.equals(this.projectedBalances, marginAccount.projectedBalances) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(initialBalances, currentBalances, projectedBalances, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MarginAccount {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    initialBalances: ").append(toIndentedString(initialBalances)).append("\n");
    sb.append("    currentBalances: ").append(toIndentedString(currentBalances)).append("\n");
    sb.append("    projectedBalances: ").append(toIndentedString(projectedBalances)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
