/*
 * Trader API - Account Access and User Preferences
 * Schwab Trader API access to Account, Order entry and User Preferences
 *
 * OpenAPI spec version: 1.0.0
 * Contact: TraderAPI@Schwab.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.kcjmowright.schwab.trader.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * AccountAPIOptionDeliverable
 */
public class AccountAPIOptionDeliverable {
  @JsonProperty("symbol")
  private String symbol = null;

  @JsonProperty("deliverableUnits")
  private Double deliverableUnits = null;

  /**
   * Gets or Sets apiCurrencyType
   */
  public enum ApiCurrencyTypeEnum {
    USD("USD"),
    CAD("CAD"),
    EUR("EUR"),
    JPY("JPY");

    private String value;

    ApiCurrencyTypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static ApiCurrencyTypeEnum fromValue(String input) {
      for (ApiCurrencyTypeEnum b : ApiCurrencyTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("apiCurrencyType")
  private ApiCurrencyTypeEnum apiCurrencyType = null;

  @JsonProperty("assetType")
  private AssetType assetType = null;

  public AccountAPIOptionDeliverable symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @Schema(description = "")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public AccountAPIOptionDeliverable deliverableUnits(Double deliverableUnits) {
    this.deliverableUnits = deliverableUnits;
    return this;
  }

   /**
   * Get deliverableUnits
   * @return deliverableUnits
  **/
  @Schema(description = "")
  public Double getDeliverableUnits() {
    return deliverableUnits;
  }

  public void setDeliverableUnits(Double deliverableUnits) {
    this.deliverableUnits = deliverableUnits;
  }

  public AccountAPIOptionDeliverable apiCurrencyType(ApiCurrencyTypeEnum apiCurrencyType) {
    this.apiCurrencyType = apiCurrencyType;
    return this;
  }

   /**
   * Get apiCurrencyType
   * @return apiCurrencyType
  **/
  @Schema(description = "")
  public ApiCurrencyTypeEnum getApiCurrencyType() {
    return apiCurrencyType;
  }

  public void setApiCurrencyType(ApiCurrencyTypeEnum apiCurrencyType) {
    this.apiCurrencyType = apiCurrencyType;
  }

  public AccountAPIOptionDeliverable assetType(AssetType assetType) {
    this.assetType = assetType;
    return this;
  }

   /**
   * Get assetType
   * @return assetType
  **/
  @Schema(description = "")
  public AssetType getAssetType() {
    return assetType;
  }

  public void setAssetType(AssetType assetType) {
    this.assetType = assetType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountAPIOptionDeliverable accountAPIOptionDeliverable = (AccountAPIOptionDeliverable) o;
    return Objects.equals(this.symbol, accountAPIOptionDeliverable.symbol) &&
        Objects.equals(this.deliverableUnits, accountAPIOptionDeliverable.deliverableUnits) &&
        Objects.equals(this.apiCurrencyType, accountAPIOptionDeliverable.apiCurrencyType) &&
        Objects.equals(this.assetType, accountAPIOptionDeliverable.assetType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbol, deliverableUnits, apiCurrencyType, assetType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountAPIOptionDeliverable {\n");

    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    deliverableUnits: ").append(toIndentedString(deliverableUnits)).append("\n");
    sb.append("    apiCurrencyType: ").append(toIndentedString(apiCurrencyType)).append("\n");
    sb.append("    assetType: ").append(toIndentedString(assetType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
