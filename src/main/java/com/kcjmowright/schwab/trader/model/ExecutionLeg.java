/*
 * Trader API - Account Access and User Preferences
 * Schwab Trader API access to Account, Order entry and User Preferences
 *
 * OpenAPI spec version: 1.0.0
 * Contact: TraderAPI@Schwab.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.kcjmowright.schwab.trader.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;
/**
 * ExecutionLeg
 */



public class ExecutionLeg {
  @JsonProperty("legId")
  private Long legId = null;

  @JsonProperty("price")
  private Double price = null;

  @JsonProperty("quantity")
  private Double quantity = null;

  @JsonProperty("mismarkedQuantity")
  private Double mismarkedQuantity = null;

  @JsonProperty("instrumentId")
  private Long instrumentId = null;

  @JsonProperty("time")
  private OffsetDateTime time = null;

  public ExecutionLeg legId(Long legId) {
    this.legId = legId;
    return this;
  }

   /**
   * Get legId
   * @return legId
  **/
  @Schema(description = "")
  public Long getLegId() {
    return legId;
  }

  public void setLegId(Long legId) {
    this.legId = legId;
  }

  public ExecutionLeg price(Double price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @Schema(description = "")
  public Double getPrice() {
    return price;
  }

  public void setPrice(Double price) {
    this.price = price;
  }

  public ExecutionLeg quantity(Double quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @Schema(description = "")
  public Double getQuantity() {
    return quantity;
  }

  public void setQuantity(Double quantity) {
    this.quantity = quantity;
  }

  public ExecutionLeg mismarkedQuantity(Double mismarkedQuantity) {
    this.mismarkedQuantity = mismarkedQuantity;
    return this;
  }

   /**
   * Get mismarkedQuantity
   * @return mismarkedQuantity
  **/
  @Schema(description = "")
  public Double getMismarkedQuantity() {
    return mismarkedQuantity;
  }

  public void setMismarkedQuantity(Double mismarkedQuantity) {
    this.mismarkedQuantity = mismarkedQuantity;
  }

  public ExecutionLeg instrumentId(Long instrumentId) {
    this.instrumentId = instrumentId;
    return this;
  }

   /**
   * Get instrumentId
   * @return instrumentId
  **/
  @Schema(description = "")
  public Long getInstrumentId() {
    return instrumentId;
  }

  public void setInstrumentId(Long instrumentId) {
    this.instrumentId = instrumentId;
  }

  public ExecutionLeg time(OffsetDateTime time) {
    this.time = time;
    return this;
  }

   /**
   * Get time
   * @return time
  **/
  @Schema(description = "")
  public OffsetDateTime getTime() {
    return time;
  }

  public void setTime(OffsetDateTime time) {
    this.time = time;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExecutionLeg executionLeg = (ExecutionLeg) o;
    return Objects.equals(this.legId, executionLeg.legId) &&
        Objects.equals(this.price, executionLeg.price) &&
        Objects.equals(this.quantity, executionLeg.quantity) &&
        Objects.equals(this.mismarkedQuantity, executionLeg.mismarkedQuantity) &&
        Objects.equals(this.instrumentId, executionLeg.instrumentId) &&
        Objects.equals(this.time, executionLeg.time);
  }

  @Override
  public int hashCode() {
    return Objects.hash(legId, price, quantity, mismarkedQuantity, instrumentId, time);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExecutionLeg {\n");
    
    sb.append("    legId: ").append(toIndentedString(legId)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    mismarkedQuantity: ").append(toIndentedString(mismarkedQuantity)).append("\n");
    sb.append("    instrumentId: ").append(toIndentedString(instrumentId)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
