/*
 * Trader API - Account Access and User Preferences
 * Schwab Trader API access to Account, Order entry and User Preferences
 *
 * OpenAPI spec version: 1.0.0
 * Contact: TraderAPI@Schwab.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.kcjmowright.schwab.trader.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.kcjmowright.schwab.trader.model.AssetType;
import com.kcjmowright.schwab.trader.model.TransactionInstrument;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * TransactionAPIOptionDeliverable
 */



public class TransactionAPIOptionDeliverable {
  @JsonProperty("rootSymbol")
  private String rootSymbol = null;

  @JsonProperty("strikePercent")
  private Long strikePercent = null;

  @JsonProperty("deliverableNumber")
  private Long deliverableNumber = null;

  @JsonProperty("deliverableUnits")
  private Double deliverableUnits = null;

  @JsonProperty("deliverable")
  private TransactionInstrument deliverable = null;

  @JsonProperty("assetType")
  private AssetType assetType = null;

  public TransactionAPIOptionDeliverable rootSymbol(String rootSymbol) {
    this.rootSymbol = rootSymbol;
    return this;
  }

   /**
   * Get rootSymbol
   * @return rootSymbol
  **/
  @Schema(description = "")
  public String getRootSymbol() {
    return rootSymbol;
  }

  public void setRootSymbol(String rootSymbol) {
    this.rootSymbol = rootSymbol;
  }

  public TransactionAPIOptionDeliverable strikePercent(Long strikePercent) {
    this.strikePercent = strikePercent;
    return this;
  }

   /**
   * Get strikePercent
   * @return strikePercent
  **/
  @Schema(description = "")
  public Long getStrikePercent() {
    return strikePercent;
  }

  public void setStrikePercent(Long strikePercent) {
    this.strikePercent = strikePercent;
  }

  public TransactionAPIOptionDeliverable deliverableNumber(Long deliverableNumber) {
    this.deliverableNumber = deliverableNumber;
    return this;
  }

   /**
   * Get deliverableNumber
   * @return deliverableNumber
  **/
  @Schema(description = "")
  public Long getDeliverableNumber() {
    return deliverableNumber;
  }

  public void setDeliverableNumber(Long deliverableNumber) {
    this.deliverableNumber = deliverableNumber;
  }

  public TransactionAPIOptionDeliverable deliverableUnits(Double deliverableUnits) {
    this.deliverableUnits = deliverableUnits;
    return this;
  }

   /**
   * Get deliverableUnits
   * @return deliverableUnits
  **/
  @Schema(description = "")
  public Double getDeliverableUnits() {
    return deliverableUnits;
  }

  public void setDeliverableUnits(Double deliverableUnits) {
    this.deliverableUnits = deliverableUnits;
  }

  public TransactionAPIOptionDeliverable deliverable(TransactionInstrument deliverable) {
    this.deliverable = deliverable;
    return this;
  }

   /**
   * Get deliverable
   * @return deliverable
  **/
  @Schema(description = "")
  public TransactionInstrument getDeliverable() {
    return deliverable;
  }

  public void setDeliverable(TransactionInstrument deliverable) {
    this.deliverable = deliverable;
  }

  public TransactionAPIOptionDeliverable assetType(AssetType assetType) {
    this.assetType = assetType;
    return this;
  }

   /**
   * Get assetType
   * @return assetType
  **/
  @Schema(description = "")
  public AssetType getAssetType() {
    return assetType;
  }

  public void setAssetType(AssetType assetType) {
    this.assetType = assetType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionAPIOptionDeliverable transactionAPIOptionDeliverable = (TransactionAPIOptionDeliverable) o;
    return Objects.equals(this.rootSymbol, transactionAPIOptionDeliverable.rootSymbol) &&
        Objects.equals(this.strikePercent, transactionAPIOptionDeliverable.strikePercent) &&
        Objects.equals(this.deliverableNumber, transactionAPIOptionDeliverable.deliverableNumber) &&
        Objects.equals(this.deliverableUnits, transactionAPIOptionDeliverable.deliverableUnits) &&
        Objects.equals(this.deliverable, transactionAPIOptionDeliverable.deliverable) &&
        Objects.equals(this.assetType, transactionAPIOptionDeliverable.assetType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rootSymbol, strikePercent, deliverableNumber, deliverableUnits, deliverable, assetType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionAPIOptionDeliverable {\n");
    
    sb.append("    rootSymbol: ").append(toIndentedString(rootSymbol)).append("\n");
    sb.append("    strikePercent: ").append(toIndentedString(strikePercent)).append("\n");
    sb.append("    deliverableNumber: ").append(toIndentedString(deliverableNumber)).append("\n");
    sb.append("    deliverableUnits: ").append(toIndentedString(deliverableUnits)).append("\n");
    sb.append("    deliverable: ").append(toIndentedString(deliverable)).append("\n");
    sb.append("    assetType: ").append(toIndentedString(assetType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
