/*
 * Trader API - Account Access and User Preferences
 * Schwab Trader API access to Account, Order entry and User Preferences
 *
 * OpenAPI spec version: 1.0.0
 * Contact: TraderAPI@Schwab.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.kcjmowright.schwab.trader.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * MarginInitialBalance
 */



public class MarginInitialBalance {
  @JsonProperty("accruedInterest")
  private Double accruedInterest = null;

  @JsonProperty("availableFundsNonMarginableTrade")
  private Double availableFundsNonMarginableTrade = null;

  @JsonProperty("bondValue")
  private Double bondValue = null;

  @JsonProperty("buyingPower")
  private Double buyingPower = null;

  @JsonProperty("cashBalance")
  private Double cashBalance = null;

  @JsonProperty("cashAvailableForTrading")
  private Double cashAvailableForTrading = null;

  @JsonProperty("cashReceipts")
  private Double cashReceipts = null;

  @JsonProperty("dayTradingBuyingPower")
  private Double dayTradingBuyingPower = null;

  @JsonProperty("dayTradingBuyingPowerCall")
  private Double dayTradingBuyingPowerCall = null;

  @JsonProperty("dayTradingEquityCall")
  private Double dayTradingEquityCall = null;

  @JsonProperty("equity")
  private Double equity = null;

  @JsonProperty("equityPercentage")
  private Double equityPercentage = null;

  @JsonProperty("liquidationValue")
  private Double liquidationValue = null;

  @JsonProperty("longMarginValue")
  private Double longMarginValue = null;

  @JsonProperty("longOptionMarketValue")
  private Double longOptionMarketValue = null;

  @JsonProperty("longStockValue")
  private Double longStockValue = null;

  @JsonProperty("maintenanceCall")
  private Double maintenanceCall = null;

  @JsonProperty("maintenanceRequirement")
  private Double maintenanceRequirement = null;

  @JsonProperty("margin")
  private Double margin = null;

  @JsonProperty("marginEquity")
  private Double marginEquity = null;

  @JsonProperty("moneyMarketFund")
  private Double moneyMarketFund = null;

  @JsonProperty("mutualFundValue")
  private Double mutualFundValue = null;

  @JsonProperty("regTCall")
  private Double regTCall = null;

  @JsonProperty("shortMarginValue")
  private Double shortMarginValue = null;

  @JsonProperty("shortOptionMarketValue")
  private Double shortOptionMarketValue = null;

  @JsonProperty("shortStockValue")
  private Double shortStockValue = null;

  @JsonProperty("totalCash")
  private Double totalCash = null;

  @JsonProperty("isInCall")
  private Double isInCall = null;

  @JsonProperty("unsettledCash")
  private Double unsettledCash = null;

  @JsonProperty("pendingDeposits")
  private Double pendingDeposits = null;

  @JsonProperty("marginBalance")
  private Double marginBalance = null;

  @JsonProperty("shortBalance")
  private Double shortBalance = null;

  @JsonProperty("accountValue")
  private Double accountValue = null;

  public MarginInitialBalance accruedInterest(Double accruedInterest) {
    this.accruedInterest = accruedInterest;
    return this;
  }

   /**
   * Get accruedInterest
   * @return accruedInterest
  **/
  @Schema(description = "")
  public Double getAccruedInterest() {
    return accruedInterest;
  }

  public void setAccruedInterest(Double accruedInterest) {
    this.accruedInterest = accruedInterest;
  }

  public MarginInitialBalance availableFundsNonMarginableTrade(Double availableFundsNonMarginableTrade) {
    this.availableFundsNonMarginableTrade = availableFundsNonMarginableTrade;
    return this;
  }

   /**
   * Get availableFundsNonMarginableTrade
   * @return availableFundsNonMarginableTrade
  **/
  @Schema(description = "")
  public Double getAvailableFundsNonMarginableTrade() {
    return availableFundsNonMarginableTrade;
  }

  public void setAvailableFundsNonMarginableTrade(Double availableFundsNonMarginableTrade) {
    this.availableFundsNonMarginableTrade = availableFundsNonMarginableTrade;
  }

  public MarginInitialBalance bondValue(Double bondValue) {
    this.bondValue = bondValue;
    return this;
  }

   /**
   * Get bondValue
   * @return bondValue
  **/
  @Schema(description = "")
  public Double getBondValue() {
    return bondValue;
  }

  public void setBondValue(Double bondValue) {
    this.bondValue = bondValue;
  }

  public MarginInitialBalance buyingPower(Double buyingPower) {
    this.buyingPower = buyingPower;
    return this;
  }

   /**
   * Get buyingPower
   * @return buyingPower
  **/
  @Schema(description = "")
  public Double getBuyingPower() {
    return buyingPower;
  }

  public void setBuyingPower(Double buyingPower) {
    this.buyingPower = buyingPower;
  }

  public MarginInitialBalance cashBalance(Double cashBalance) {
    this.cashBalance = cashBalance;
    return this;
  }

   /**
   * Get cashBalance
   * @return cashBalance
  **/
  @Schema(description = "")
  public Double getCashBalance() {
    return cashBalance;
  }

  public void setCashBalance(Double cashBalance) {
    this.cashBalance = cashBalance;
  }

  public MarginInitialBalance cashAvailableForTrading(Double cashAvailableForTrading) {
    this.cashAvailableForTrading = cashAvailableForTrading;
    return this;
  }

   /**
   * Get cashAvailableForTrading
   * @return cashAvailableForTrading
  **/
  @Schema(description = "")
  public Double getCashAvailableForTrading() {
    return cashAvailableForTrading;
  }

  public void setCashAvailableForTrading(Double cashAvailableForTrading) {
    this.cashAvailableForTrading = cashAvailableForTrading;
  }

  public MarginInitialBalance cashReceipts(Double cashReceipts) {
    this.cashReceipts = cashReceipts;
    return this;
  }

   /**
   * Get cashReceipts
   * @return cashReceipts
  **/
  @Schema(description = "")
  public Double getCashReceipts() {
    return cashReceipts;
  }

  public void setCashReceipts(Double cashReceipts) {
    this.cashReceipts = cashReceipts;
  }

  public MarginInitialBalance dayTradingBuyingPower(Double dayTradingBuyingPower) {
    this.dayTradingBuyingPower = dayTradingBuyingPower;
    return this;
  }

   /**
   * Get dayTradingBuyingPower
   * @return dayTradingBuyingPower
  **/
  @Schema(description = "")
  public Double getDayTradingBuyingPower() {
    return dayTradingBuyingPower;
  }

  public void setDayTradingBuyingPower(Double dayTradingBuyingPower) {
    this.dayTradingBuyingPower = dayTradingBuyingPower;
  }

  public MarginInitialBalance dayTradingBuyingPowerCall(Double dayTradingBuyingPowerCall) {
    this.dayTradingBuyingPowerCall = dayTradingBuyingPowerCall;
    return this;
  }

   /**
   * Get dayTradingBuyingPowerCall
   * @return dayTradingBuyingPowerCall
  **/
  @Schema(description = "")
  public Double getDayTradingBuyingPowerCall() {
    return dayTradingBuyingPowerCall;
  }

  public void setDayTradingBuyingPowerCall(Double dayTradingBuyingPowerCall) {
    this.dayTradingBuyingPowerCall = dayTradingBuyingPowerCall;
  }

  public MarginInitialBalance dayTradingEquityCall(Double dayTradingEquityCall) {
    this.dayTradingEquityCall = dayTradingEquityCall;
    return this;
  }

   /**
   * Get dayTradingEquityCall
   * @return dayTradingEquityCall
  **/
  @Schema(description = "")
  public Double getDayTradingEquityCall() {
    return dayTradingEquityCall;
  }

  public void setDayTradingEquityCall(Double dayTradingEquityCall) {
    this.dayTradingEquityCall = dayTradingEquityCall;
  }

  public MarginInitialBalance equity(Double equity) {
    this.equity = equity;
    return this;
  }

   /**
   * Get equity
   * @return equity
  **/
  @Schema(description = "")
  public Double getEquity() {
    return equity;
  }

  public void setEquity(Double equity) {
    this.equity = equity;
  }

  public MarginInitialBalance equityPercentage(Double equityPercentage) {
    this.equityPercentage = equityPercentage;
    return this;
  }

   /**
   * Get equityPercentage
   * @return equityPercentage
  **/
  @Schema(description = "")
  public Double getEquityPercentage() {
    return equityPercentage;
  }

  public void setEquityPercentage(Double equityPercentage) {
    this.equityPercentage = equityPercentage;
  }

  public MarginInitialBalance liquidationValue(Double liquidationValue) {
    this.liquidationValue = liquidationValue;
    return this;
  }

   /**
   * Get liquidationValue
   * @return liquidationValue
  **/
  @Schema(description = "")
  public Double getLiquidationValue() {
    return liquidationValue;
  }

  public void setLiquidationValue(Double liquidationValue) {
    this.liquidationValue = liquidationValue;
  }

  public MarginInitialBalance longMarginValue(Double longMarginValue) {
    this.longMarginValue = longMarginValue;
    return this;
  }

   /**
   * Get longMarginValue
   * @return longMarginValue
  **/
  @Schema(description = "")
  public Double getLongMarginValue() {
    return longMarginValue;
  }

  public void setLongMarginValue(Double longMarginValue) {
    this.longMarginValue = longMarginValue;
  }

  public MarginInitialBalance longOptionMarketValue(Double longOptionMarketValue) {
    this.longOptionMarketValue = longOptionMarketValue;
    return this;
  }

   /**
   * Get longOptionMarketValue
   * @return longOptionMarketValue
  **/
  @Schema(description = "")
  public Double getLongOptionMarketValue() {
    return longOptionMarketValue;
  }

  public void setLongOptionMarketValue(Double longOptionMarketValue) {
    this.longOptionMarketValue = longOptionMarketValue;
  }

  public MarginInitialBalance longStockValue(Double longStockValue) {
    this.longStockValue = longStockValue;
    return this;
  }

   /**
   * Get longStockValue
   * @return longStockValue
  **/
  @Schema(description = "")
  public Double getLongStockValue() {
    return longStockValue;
  }

  public void setLongStockValue(Double longStockValue) {
    this.longStockValue = longStockValue;
  }

  public MarginInitialBalance maintenanceCall(Double maintenanceCall) {
    this.maintenanceCall = maintenanceCall;
    return this;
  }

   /**
   * Get maintenanceCall
   * @return maintenanceCall
  **/
  @Schema(description = "")
  public Double getMaintenanceCall() {
    return maintenanceCall;
  }

  public void setMaintenanceCall(Double maintenanceCall) {
    this.maintenanceCall = maintenanceCall;
  }

  public MarginInitialBalance maintenanceRequirement(Double maintenanceRequirement) {
    this.maintenanceRequirement = maintenanceRequirement;
    return this;
  }

   /**
   * Get maintenanceRequirement
   * @return maintenanceRequirement
  **/
  @Schema(description = "")
  public Double getMaintenanceRequirement() {
    return maintenanceRequirement;
  }

  public void setMaintenanceRequirement(Double maintenanceRequirement) {
    this.maintenanceRequirement = maintenanceRequirement;
  }

  public MarginInitialBalance margin(Double margin) {
    this.margin = margin;
    return this;
  }

   /**
   * Get margin
   * @return margin
  **/
  @Schema(description = "")
  public Double getMargin() {
    return margin;
  }

  public void setMargin(Double margin) {
    this.margin = margin;
  }

  public MarginInitialBalance marginEquity(Double marginEquity) {
    this.marginEquity = marginEquity;
    return this;
  }

   /**
   * Get marginEquity
   * @return marginEquity
  **/
  @Schema(description = "")
  public Double getMarginEquity() {
    return marginEquity;
  }

  public void setMarginEquity(Double marginEquity) {
    this.marginEquity = marginEquity;
  }

  public MarginInitialBalance moneyMarketFund(Double moneyMarketFund) {
    this.moneyMarketFund = moneyMarketFund;
    return this;
  }

   /**
   * Get moneyMarketFund
   * @return moneyMarketFund
  **/
  @Schema(description = "")
  public Double getMoneyMarketFund() {
    return moneyMarketFund;
  }

  public void setMoneyMarketFund(Double moneyMarketFund) {
    this.moneyMarketFund = moneyMarketFund;
  }

  public MarginInitialBalance mutualFundValue(Double mutualFundValue) {
    this.mutualFundValue = mutualFundValue;
    return this;
  }

   /**
   * Get mutualFundValue
   * @return mutualFundValue
  **/
  @Schema(description = "")
  public Double getMutualFundValue() {
    return mutualFundValue;
  }

  public void setMutualFundValue(Double mutualFundValue) {
    this.mutualFundValue = mutualFundValue;
  }

  public MarginInitialBalance regTCall(Double regTCall) {
    this.regTCall = regTCall;
    return this;
  }

   /**
   * Get regTCall
   * @return regTCall
  **/
  @Schema(description = "")
  public Double getRegTCall() {
    return regTCall;
  }

  public void setRegTCall(Double regTCall) {
    this.regTCall = regTCall;
  }

  public MarginInitialBalance shortMarginValue(Double shortMarginValue) {
    this.shortMarginValue = shortMarginValue;
    return this;
  }

   /**
   * Get shortMarginValue
   * @return shortMarginValue
  **/
  @Schema(description = "")
  public Double getShortMarginValue() {
    return shortMarginValue;
  }

  public void setShortMarginValue(Double shortMarginValue) {
    this.shortMarginValue = shortMarginValue;
  }

  public MarginInitialBalance shortOptionMarketValue(Double shortOptionMarketValue) {
    this.shortOptionMarketValue = shortOptionMarketValue;
    return this;
  }

   /**
   * Get shortOptionMarketValue
   * @return shortOptionMarketValue
  **/
  @Schema(description = "")
  public Double getShortOptionMarketValue() {
    return shortOptionMarketValue;
  }

  public void setShortOptionMarketValue(Double shortOptionMarketValue) {
    this.shortOptionMarketValue = shortOptionMarketValue;
  }

  public MarginInitialBalance shortStockValue(Double shortStockValue) {
    this.shortStockValue = shortStockValue;
    return this;
  }

   /**
   * Get shortStockValue
   * @return shortStockValue
  **/
  @Schema(description = "")
  public Double getShortStockValue() {
    return shortStockValue;
  }

  public void setShortStockValue(Double shortStockValue) {
    this.shortStockValue = shortStockValue;
  }

  public MarginInitialBalance totalCash(Double totalCash) {
    this.totalCash = totalCash;
    return this;
  }

   /**
   * Get totalCash
   * @return totalCash
  **/
  @Schema(description = "")
  public Double getTotalCash() {
    return totalCash;
  }

  public void setTotalCash(Double totalCash) {
    this.totalCash = totalCash;
  }

  public MarginInitialBalance isInCall(Double isInCall) {
    this.isInCall = isInCall;
    return this;
  }

   /**
   * Get isInCall
   * @return isInCall
  **/
  @Schema(description = "")
  public Double getIsInCall() {
    return isInCall;
  }

  public void setIsInCall(Double isInCall) {
    this.isInCall = isInCall;
  }

  public MarginInitialBalance unsettledCash(Double unsettledCash) {
    this.unsettledCash = unsettledCash;
    return this;
  }

   /**
   * Get unsettledCash
   * @return unsettledCash
  **/
  @Schema(description = "")
  public Double getUnsettledCash() {
    return unsettledCash;
  }

  public void setUnsettledCash(Double unsettledCash) {
    this.unsettledCash = unsettledCash;
  }

  public MarginInitialBalance pendingDeposits(Double pendingDeposits) {
    this.pendingDeposits = pendingDeposits;
    return this;
  }

   /**
   * Get pendingDeposits
   * @return pendingDeposits
  **/
  @Schema(description = "")
  public Double getPendingDeposits() {
    return pendingDeposits;
  }

  public void setPendingDeposits(Double pendingDeposits) {
    this.pendingDeposits = pendingDeposits;
  }

  public MarginInitialBalance marginBalance(Double marginBalance) {
    this.marginBalance = marginBalance;
    return this;
  }

   /**
   * Get marginBalance
   * @return marginBalance
  **/
  @Schema(description = "")
  public Double getMarginBalance() {
    return marginBalance;
  }

  public void setMarginBalance(Double marginBalance) {
    this.marginBalance = marginBalance;
  }

  public MarginInitialBalance shortBalance(Double shortBalance) {
    this.shortBalance = shortBalance;
    return this;
  }

   /**
   * Get shortBalance
   * @return shortBalance
  **/
  @Schema(description = "")
  public Double getShortBalance() {
    return shortBalance;
  }

  public void setShortBalance(Double shortBalance) {
    this.shortBalance = shortBalance;
  }

  public MarginInitialBalance accountValue(Double accountValue) {
    this.accountValue = accountValue;
    return this;
  }

   /**
   * Get accountValue
   * @return accountValue
  **/
  @Schema(description = "")
  public Double getAccountValue() {
    return accountValue;
  }

  public void setAccountValue(Double accountValue) {
    this.accountValue = accountValue;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MarginInitialBalance marginInitialBalance = (MarginInitialBalance) o;
    return Objects.equals(this.accruedInterest, marginInitialBalance.accruedInterest) &&
        Objects.equals(this.availableFundsNonMarginableTrade, marginInitialBalance.availableFundsNonMarginableTrade) &&
        Objects.equals(this.bondValue, marginInitialBalance.bondValue) &&
        Objects.equals(this.buyingPower, marginInitialBalance.buyingPower) &&
        Objects.equals(this.cashBalance, marginInitialBalance.cashBalance) &&
        Objects.equals(this.cashAvailableForTrading, marginInitialBalance.cashAvailableForTrading) &&
        Objects.equals(this.cashReceipts, marginInitialBalance.cashReceipts) &&
        Objects.equals(this.dayTradingBuyingPower, marginInitialBalance.dayTradingBuyingPower) &&
        Objects.equals(this.dayTradingBuyingPowerCall, marginInitialBalance.dayTradingBuyingPowerCall) &&
        Objects.equals(this.dayTradingEquityCall, marginInitialBalance.dayTradingEquityCall) &&
        Objects.equals(this.equity, marginInitialBalance.equity) &&
        Objects.equals(this.equityPercentage, marginInitialBalance.equityPercentage) &&
        Objects.equals(this.liquidationValue, marginInitialBalance.liquidationValue) &&
        Objects.equals(this.longMarginValue, marginInitialBalance.longMarginValue) &&
        Objects.equals(this.longOptionMarketValue, marginInitialBalance.longOptionMarketValue) &&
        Objects.equals(this.longStockValue, marginInitialBalance.longStockValue) &&
        Objects.equals(this.maintenanceCall, marginInitialBalance.maintenanceCall) &&
        Objects.equals(this.maintenanceRequirement, marginInitialBalance.maintenanceRequirement) &&
        Objects.equals(this.margin, marginInitialBalance.margin) &&
        Objects.equals(this.marginEquity, marginInitialBalance.marginEquity) &&
        Objects.equals(this.moneyMarketFund, marginInitialBalance.moneyMarketFund) &&
        Objects.equals(this.mutualFundValue, marginInitialBalance.mutualFundValue) &&
        Objects.equals(this.regTCall, marginInitialBalance.regTCall) &&
        Objects.equals(this.shortMarginValue, marginInitialBalance.shortMarginValue) &&
        Objects.equals(this.shortOptionMarketValue, marginInitialBalance.shortOptionMarketValue) &&
        Objects.equals(this.shortStockValue, marginInitialBalance.shortStockValue) &&
        Objects.equals(this.totalCash, marginInitialBalance.totalCash) &&
        Objects.equals(this.isInCall, marginInitialBalance.isInCall) &&
        Objects.equals(this.unsettledCash, marginInitialBalance.unsettledCash) &&
        Objects.equals(this.pendingDeposits, marginInitialBalance.pendingDeposits) &&
        Objects.equals(this.marginBalance, marginInitialBalance.marginBalance) &&
        Objects.equals(this.shortBalance, marginInitialBalance.shortBalance) &&
        Objects.equals(this.accountValue, marginInitialBalance.accountValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accruedInterest, availableFundsNonMarginableTrade, bondValue, buyingPower, cashBalance, cashAvailableForTrading, cashReceipts, dayTradingBuyingPower, dayTradingBuyingPowerCall, dayTradingEquityCall, equity, equityPercentage, liquidationValue, longMarginValue, longOptionMarketValue, longStockValue, maintenanceCall, maintenanceRequirement, margin, marginEquity, moneyMarketFund, mutualFundValue, regTCall, shortMarginValue, shortOptionMarketValue, shortStockValue, totalCash, isInCall, unsettledCash, pendingDeposits, marginBalance, shortBalance, accountValue);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MarginInitialBalance {\n");
    
    sb.append("    accruedInterest: ").append(toIndentedString(accruedInterest)).append("\n");
    sb.append("    availableFundsNonMarginableTrade: ").append(toIndentedString(availableFundsNonMarginableTrade)).append("\n");
    sb.append("    bondValue: ").append(toIndentedString(bondValue)).append("\n");
    sb.append("    buyingPower: ").append(toIndentedString(buyingPower)).append("\n");
    sb.append("    cashBalance: ").append(toIndentedString(cashBalance)).append("\n");
    sb.append("    cashAvailableForTrading: ").append(toIndentedString(cashAvailableForTrading)).append("\n");
    sb.append("    cashReceipts: ").append(toIndentedString(cashReceipts)).append("\n");
    sb.append("    dayTradingBuyingPower: ").append(toIndentedString(dayTradingBuyingPower)).append("\n");
    sb.append("    dayTradingBuyingPowerCall: ").append(toIndentedString(dayTradingBuyingPowerCall)).append("\n");
    sb.append("    dayTradingEquityCall: ").append(toIndentedString(dayTradingEquityCall)).append("\n");
    sb.append("    equity: ").append(toIndentedString(equity)).append("\n");
    sb.append("    equityPercentage: ").append(toIndentedString(equityPercentage)).append("\n");
    sb.append("    liquidationValue: ").append(toIndentedString(liquidationValue)).append("\n");
    sb.append("    longMarginValue: ").append(toIndentedString(longMarginValue)).append("\n");
    sb.append("    longOptionMarketValue: ").append(toIndentedString(longOptionMarketValue)).append("\n");
    sb.append("    longStockValue: ").append(toIndentedString(longStockValue)).append("\n");
    sb.append("    maintenanceCall: ").append(toIndentedString(maintenanceCall)).append("\n");
    sb.append("    maintenanceRequirement: ").append(toIndentedString(maintenanceRequirement)).append("\n");
    sb.append("    margin: ").append(toIndentedString(margin)).append("\n");
    sb.append("    marginEquity: ").append(toIndentedString(marginEquity)).append("\n");
    sb.append("    moneyMarketFund: ").append(toIndentedString(moneyMarketFund)).append("\n");
    sb.append("    mutualFundValue: ").append(toIndentedString(mutualFundValue)).append("\n");
    sb.append("    regTCall: ").append(toIndentedString(regTCall)).append("\n");
    sb.append("    shortMarginValue: ").append(toIndentedString(shortMarginValue)).append("\n");
    sb.append("    shortOptionMarketValue: ").append(toIndentedString(shortOptionMarketValue)).append("\n");
    sb.append("    shortStockValue: ").append(toIndentedString(shortStockValue)).append("\n");
    sb.append("    totalCash: ").append(toIndentedString(totalCash)).append("\n");
    sb.append("    isInCall: ").append(toIndentedString(isInCall)).append("\n");
    sb.append("    unsettledCash: ").append(toIndentedString(unsettledCash)).append("\n");
    sb.append("    pendingDeposits: ").append(toIndentedString(pendingDeposits)).append("\n");
    sb.append("    marginBalance: ").append(toIndentedString(marginBalance)).append("\n");
    sb.append("    shortBalance: ").append(toIndentedString(shortBalance)).append("\n");
    sb.append("    accountValue: ").append(toIndentedString(accountValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
