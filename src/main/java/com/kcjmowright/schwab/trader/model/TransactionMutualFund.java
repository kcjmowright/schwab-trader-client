/*
 * Trader API - Account Access and User Preferences
 * Schwab Trader API access to Account, Order entry and User Preferences
 *
 * OpenAPI spec version: 1.0.0
 * Contact: TraderAPI@Schwab.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.kcjmowright.schwab.trader.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.kcjmowright.schwab.trader.model.TransactionBaseInstrument;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;
/**
 * TransactionMutualFund
 */



public class TransactionMutualFund extends TransactionBaseInstrument implements TransactionInstrument {
  @JsonProperty("fundFamilyName")
  private String fundFamilyName = null;

  @JsonProperty("fundFamilySymbol")
  private String fundFamilySymbol = null;

  @JsonProperty("fundGroup")
  private String fundGroup = null;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    NOT_APPLICABLE("NOT_APPLICABLE"),
    OPEN_END_NON_TAXABLE("OPEN_END_NON_TAXABLE"),
    OPEN_END_TAXABLE("OPEN_END_TAXABLE"),
    NO_LOAD_NON_TAXABLE("NO_LOAD_NON_TAXABLE"),
    NO_LOAD_TAXABLE("NO_LOAD_TAXABLE"),
    UNKNOWN("UNKNOWN");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TypeEnum fromValue(String input) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("type")
  private TypeEnum type = null;

  @JsonProperty("exchangeCutoffTime")
  private OffsetDateTime exchangeCutoffTime = null;

  @JsonProperty("purchaseCutoffTime")
  private OffsetDateTime purchaseCutoffTime = null;

  @JsonProperty("redemptionCutoffTime")
  private OffsetDateTime redemptionCutoffTime = null;

  public TransactionMutualFund fundFamilyName(String fundFamilyName) {
    this.fundFamilyName = fundFamilyName;
    return this;
  }

   /**
   * Get fundFamilyName
   * @return fundFamilyName
  **/
  @Schema(description = "")
  public String getFundFamilyName() {
    return fundFamilyName;
  }

  public void setFundFamilyName(String fundFamilyName) {
    this.fundFamilyName = fundFamilyName;
  }

  public TransactionMutualFund fundFamilySymbol(String fundFamilySymbol) {
    this.fundFamilySymbol = fundFamilySymbol;
    return this;
  }

   /**
   * Get fundFamilySymbol
   * @return fundFamilySymbol
  **/
  @Schema(description = "")
  public String getFundFamilySymbol() {
    return fundFamilySymbol;
  }

  public void setFundFamilySymbol(String fundFamilySymbol) {
    this.fundFamilySymbol = fundFamilySymbol;
  }

  public TransactionMutualFund fundGroup(String fundGroup) {
    this.fundGroup = fundGroup;
    return this;
  }

   /**
   * Get fundGroup
   * @return fundGroup
  **/
  @Schema(description = "")
  public String getFundGroup() {
    return fundGroup;
  }

  public void setFundGroup(String fundGroup) {
    this.fundGroup = fundGroup;
  }

  public TransactionMutualFund type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public TransactionMutualFund exchangeCutoffTime(OffsetDateTime exchangeCutoffTime) {
    this.exchangeCutoffTime = exchangeCutoffTime;
    return this;
  }

   /**
   * Get exchangeCutoffTime
   * @return exchangeCutoffTime
  **/
  @Schema(description = "")
  public OffsetDateTime getExchangeCutoffTime() {
    return exchangeCutoffTime;
  }

  public void setExchangeCutoffTime(OffsetDateTime exchangeCutoffTime) {
    this.exchangeCutoffTime = exchangeCutoffTime;
  }

  public TransactionMutualFund purchaseCutoffTime(OffsetDateTime purchaseCutoffTime) {
    this.purchaseCutoffTime = purchaseCutoffTime;
    return this;
  }

   /**
   * Get purchaseCutoffTime
   * @return purchaseCutoffTime
  **/
  @Schema(description = "")
  public OffsetDateTime getPurchaseCutoffTime() {
    return purchaseCutoffTime;
  }

  public void setPurchaseCutoffTime(OffsetDateTime purchaseCutoffTime) {
    this.purchaseCutoffTime = purchaseCutoffTime;
  }

  public TransactionMutualFund redemptionCutoffTime(OffsetDateTime redemptionCutoffTime) {
    this.redemptionCutoffTime = redemptionCutoffTime;
    return this;
  }

   /**
   * Get redemptionCutoffTime
   * @return redemptionCutoffTime
  **/
  @Schema(description = "")
  public OffsetDateTime getRedemptionCutoffTime() {
    return redemptionCutoffTime;
  }

  public void setRedemptionCutoffTime(OffsetDateTime redemptionCutoffTime) {
    this.redemptionCutoffTime = redemptionCutoffTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionMutualFund transactionMutualFund = (TransactionMutualFund) o;
    return Objects.equals(this.fundFamilyName, transactionMutualFund.fundFamilyName) &&
        Objects.equals(this.fundFamilySymbol, transactionMutualFund.fundFamilySymbol) &&
        Objects.equals(this.fundGroup, transactionMutualFund.fundGroup) &&
        Objects.equals(this.type, transactionMutualFund.type) &&
        Objects.equals(this.exchangeCutoffTime, transactionMutualFund.exchangeCutoffTime) &&
        Objects.equals(this.purchaseCutoffTime, transactionMutualFund.purchaseCutoffTime) &&
        Objects.equals(this.redemptionCutoffTime, transactionMutualFund.redemptionCutoffTime) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fundFamilyName, fundFamilySymbol, fundGroup, type, exchangeCutoffTime, purchaseCutoffTime, redemptionCutoffTime, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionMutualFund {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    fundFamilyName: ").append(toIndentedString(fundFamilyName)).append("\n");
    sb.append("    fundFamilySymbol: ").append(toIndentedString(fundFamilySymbol)).append("\n");
    sb.append("    fundGroup: ").append(toIndentedString(fundGroup)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    exchangeCutoffTime: ").append(toIndentedString(exchangeCutoffTime)).append("\n");
    sb.append("    purchaseCutoffTime: ").append(toIndentedString(purchaseCutoffTime)).append("\n");
    sb.append("    redemptionCutoffTime: ").append(toIndentedString(redemptionCutoffTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
